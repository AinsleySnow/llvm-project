# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 2
# RUN: llc -verify-machineinstrs -mtriple=riscv64 -mattr=+xtheadv -run-pass=postrapseudos %s -o - | FileCheck %s
# TODO: Add test cases for other pseudo instructions.

...
---
name: copy_different_lmul
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_different_lmul
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x11 = ADDI $x0, 32
    ; CHECK-NEXT: $x10 = CSRRW $vl, $x11
    ; CHECK-NEXT: $x11 = CSRRWI $vtype, 1
    ; CHECK-NEXT: $v12m2 = PseudoXVMV_V_V_M2 undef $v12m2, $v28m2, $noreg, 3 /* e8 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = XVSETVL killed $x10, killed $x11, implicit-def $vtype, implicit-def $vl
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $v12m2 = COPY $v28m2
...
---
name: copy_convert_to_vmv_v_v
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_convert_to_vmv_v_v
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12m4 = PseudoXVMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_convert_to_vmv_v_i
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14
    ; CHECK-LABEL: name: copy_convert_to_vmv_v_i
    ; CHECK: liveins: $x14
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVMV_V_I_M4 undef $v28m4, 0, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12m4 = PseudoXVMV_V_I_M4 undef $v12m4, 0, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVMV_V_I_M4 undef $v28m4, 0, $noreg, 5, 0, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vsetvl_x0_x0_1
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16, $x17, $x18
    ; CHECK-LABEL: name: copy_with_vsetvl_x0_x0_1
    ; CHECK: liveins: $x14, $x16, $x17, $x18
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x17, 17, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v0m2 = PseudoXVLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoXVSETVLIX0 $x0, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v4m4 = PseudoXVLW_V_E32_M4 undef $v4m4, killed $x18, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x11 = ADDI $x0, 64
    ; CHECK-NEXT: $x10 = CSRRW $vl, $x11
    ; CHECK-NEXT: $x11 = CSRRWI $vtype, 2
    ; CHECK-NEXT: $v12m4 = PseudoXVMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 3 /* e8 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = XVSETVL killed $x10, killed $x11, implicit-def $vtype, implicit-def $vl
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x15 = PseudoXVSETVLI $x17, 17, implicit-def $vl, implicit-def $vtype
    $v0m2 = PseudoXVLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4, implicit $vl, implicit $vtype
    $x0 = PseudoXVSETVLIX0 $x0, 10, implicit-def $vl, implicit-def $vtype
    $v4m4 = PseudoXVLW_V_E32_M4 undef $v4m4, killed $x18, $noreg, 5, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vsetvl_x0_x0_2
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16, $x17, $x18
    ; CHECK-LABEL: name: copy_with_vsetvl_x0_x0_2
    ; CHECK: liveins: $x14, $x16, $x17, $x18
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoXVSETVLIX0 $x0, 17, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v0m2 = PseudoXVLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoXVSETVLIX0 $x0, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v4m4 = PseudoXVLW_V_E32_M4 undef $v4m4, killed $x18, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12m4 = PseudoXVMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x0 = PseudoXVSETVLIX0 $x0, 17, implicit-def $vl, implicit-def $vtype
    $v0m2 = PseudoXVLW_V_E32_M2  undef $v0m2, $x18, $noreg, 4, implicit $vl, implicit $vtype
    $x0 = PseudoXVSETVLIX0 $x0, 10, implicit-def $vl, implicit-def $vtype
    $v4m4 = PseudoXVLW_V_E32_M4  undef $v4m4, killed $x18, $noreg, 5, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vsetvl_x0_x0_3
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16, $x17, $x18
    ; CHECK-LABEL: name: copy_with_vsetvl_x0_x0_3
    ; CHECK: liveins: $x14, $x16, $x17, $x18
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoXVSETVLIX0 $x0, 17, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v0m2 = PseudoXVLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x11 = ADDI $x0, 64
    ; CHECK-NEXT: $x10 = CSRRW $vl, $x11
    ; CHECK-NEXT: $x11 = CSRRWI $vtype, 2
    ; CHECK-NEXT: $v12m4 = PseudoXVMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 3 /* e8 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = XVSETVL killed $x10, killed $x11, implicit-def $vtype, implicit-def $vl
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x0 = PseudoXVSETVLIX0 $x0, 17, implicit-def $vl, implicit-def $vtype
    $v0m2 = PseudoXVLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_different_vlmax
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_with_different_vlmax
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoXVSETVLIX0 $x0, 74, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v12m4 = PseudoXVMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoXVSETVLI $x14, 10, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoXVLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x0 = PseudoXVSETVLIX0 $x0, 74, implicit-def $vl, implicit-def $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_narrow_copies_in_between
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $x11, $v8, $v9
    ; CHECK-LABEL: name: copy_narrow_copies_in_between
    ; CHECK: liveins: $x10, $x11, $v8, $v9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x0 = PseudoXVSETVLI $x10, 201, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v10m2 = PseudoVLE16_V_M2 undef $v10m2, killed $x11, $noreg, 4 /* e16 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x11 = ADDI $x0, 16
    ; CHECK-NEXT: $x10 = CSRRW $vl, $x11
    ; CHECK-NEXT: $x11 = CSRRWI $vtype, 0
    ; CHECK-NEXT: $v10 = PseudoXVMV_V_V_M1 undef $v10, $v8, $noreg, 3 /* e8 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = XVSETVL killed $x10, killed $x11, implicit-def $vtype, implicit-def $vl
    ; CHECK-NEXT: $x11 = ADDI $x0, 16
    ; CHECK-NEXT: $x10 = CSRRW $vl, $x11
    ; CHECK-NEXT: $x11 = CSRRWI $vtype, 0
    ; CHECK-NEXT: $v11 = PseudoXVMV_V_V_M1 undef $v11, $v9, $noreg, 3 /* e8 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = XVSETVL killed $x10, killed $x11, implicit-def $vtype, implicit-def $vl
    ; CHECK-NEXT: $x11 = ADDI $x0, 32
    ; CHECK-NEXT: $x10 = CSRRW $vl, $x11
    ; CHECK-NEXT: $x11 = CSRRWI $vtype, 1
    ; CHECK-NEXT: $v12m2 = PseudoXVMV_V_V_M2 undef $v12m2, $v10m2, $noreg, 3 /* e8 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = XVSETVL killed $x10, killed $x11, implicit-def $vtype, implicit-def $vl
    $x0 = PseudoXVSETVLI $x10, 201, implicit-def $vl, implicit-def $vtype
    $v10m2 = PseudoVLE16_V_M2 undef $v10m2, killed $x11, $noreg, 4, 0, implicit $vl, implicit $vtype
    $v10 = COPY $v8
    $v11 = COPY $v9
    $v12m2 = COPY $v10m2
...
