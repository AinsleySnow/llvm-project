# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 2
# RUN: llc -verify-machineinstrs -mtriple=riscv64 -mattr=+xtheadvector -run-pass=postrapseudos %s -o - | FileCheck %s
# TODO: Add test cases for instructions like vwadd, vwredsum, etc.
# TODO: Add more test cases when we have tuple type support.
# 42: e32, m4, d1
# 40: e32, m1, d1
# 37: e16, m2, d1

...
---
name: copy_different_lmul
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_different_lmul
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v28, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v29, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $v12m2 = COPY $v28m2
...
---
name: copy_convert_to_vmv_v_v
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_convert_to_vmv_v_v
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12m4 = PseudoTH_VMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_convert_to_vmv_v_i
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14
    ; CHECK-LABEL: name: copy_convert_to_vmv_v_i
    ; CHECK: liveins: $x14
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VMV_V_I_M4 undef $v28m4, 0, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12m4 = PseudoTH_VMV_V_I_M4 undef $v12m4, 0, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VMV_V_I_M4 undef $v28m4, 0, $noreg, 5, 0, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_from_whole_load_store
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_from_whole_load_store
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VL4RE32_V $x16
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v28, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v29, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v14 = TH_VMV_V_V $v30, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v15 = TH_VMV_V_V $v31, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VL4RE32_V $x16
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vleff
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_with_vleff
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VMV_V_I_M4 undef $v28m4, 0, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v4m4, $x0 = PseudoTH_VLEFF_V_E32_M4 undef $v4m4, $x16, $noreg, 5 /* e32 */, implicit-def $vl
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v28, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v29, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v14 = TH_VMV_V_V $v30, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v15 = TH_VMV_V_V $v31, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VMV_V_I_M4 undef $v28m4, 0, $noreg, 5, 0, implicit $vl, implicit $vtype
    $v4m4,$x0 = PseudoTH_VLEFF_V_E32_M4 undef $v4m4, $x16, $noreg, 5, implicit-def $vl
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vsetvl_x0_x0_1
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16, $x17, $x18
    ; CHECK-LABEL: name: copy_with_vsetvl_x0_x0_1
    ; CHECK: liveins: $x14, $x16, $x17, $x18
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x17, 37, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v0m2 = PseudoTH_VLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoTH_VSETVLIX0 $x0, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v4m4 = PseudoTH_VLW_V_E32_M4 undef $v4m4, killed $x18, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v28, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v29, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v14 = TH_VMV_V_V $v30, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v15 = TH_VMV_V_V $v31, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x15 = PseudoTH_VSETVLI $x17, 37, implicit-def $vl, implicit-def $vtype
    $v0m2 = PseudoTH_VLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4, implicit $vl, implicit $vtype
    $x0 = PseudoTH_VSETVLIX0 $x0, 42, implicit-def $vl, implicit-def $vtype
    $v4m4 = PseudoTH_VLW_V_E32_M4 undef $v4m4, killed $x18, $noreg, 5, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vsetvl_x0_x0_2
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16, $x17, $x18
    ; CHECK-LABEL: name: copy_with_vsetvl_x0_x0_2
    ; CHECK: liveins: $x14, $x16, $x17, $x18
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoTH_VSETVLIX0 $x0, 37, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v0m2 = PseudoTH_VLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoTH_VSETVLIX0 $x0, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v4m4 = PseudoTH_VLW_V_E32_M4 undef $v4m4, killed $x18, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12m4 = PseudoTH_VMV_V_V_M4 undef $v12m4, $v28m4, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x0 = PseudoTH_VSETVLIX0 $x0, 37, implicit-def $vl, implicit-def $vtype
    $v0m2 = PseudoTH_VLW_V_E32_M2  undef $v0m2, $x18, $noreg, 4, implicit $vl, implicit $vtype
    $x0 = PseudoTH_VSETVLIX0 $x0, 42, implicit-def $vl, implicit-def $vtype
    $v4m4 = PseudoTH_VLW_V_E32_M4  undef $v4m4, killed $x18, $noreg, 5, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_vsetvl_x0_x0_3
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16, $x17, $x18
    ; CHECK-LABEL: name: copy_with_vsetvl_x0_x0_3
    ; CHECK: liveins: $x14, $x16, $x17, $x18
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoTH_VSETVLIX0 $x0, 37, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v0m2 = PseudoTH_VLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v28, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v29, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v14 = TH_VMV_V_V $v30, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v15 = TH_VMV_V_V $v31, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x0 = PseudoTH_VSETVLIX0 $x0, 37, implicit-def $vl, implicit-def $vtype
    $v0m2 = PseudoTH_VLW_V_E32_M2 undef $v0m2, $x18, $noreg, 4, implicit $vl, implicit $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_with_different_vlmax
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_with_different_vlmax
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $x0 = PseudoTH_VSETVLIX0 $x0, 37, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v28, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v29, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v14 = TH_VMV_V_V $v30, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v15 = TH_VMV_V_V $v31, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 42, implicit-def $vl, implicit-def $vtype
    $v28m4 = PseudoTH_VLW_V_E32_M4 undef $v28m4, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $x0 = PseudoTH_VSETVLIX0 $x0, 37, implicit-def $vl, implicit-def $vtype
    $v12m4 = COPY $v28m4
...
---
name: copy_th_vlseg_reg
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_th_vlseg_reg
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 40, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v8_v9 = PseudoTH_VLSEG2E_V_E32_M1 undef $v8_v9, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v10 = TH_VMV_V_V $v8, implicit $vtype, implicit $vl
    $x15 = PseudoTH_VSETVLI $x14, 40, implicit-def $vl, implicit-def $vtype
    $v8_v9 = PseudoTH_VLSEG2E_V_E32_M1 undef $v8_v9, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $v10 = COPY $v8
...
---
name: copy_th_vlseg_reg_2
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x14, $x16
    ; CHECK-LABEL: name: copy_th_vlseg_reg_2
    ; CHECK: liveins: $x14, $x16
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x15 = PseudoTH_VSETVLI $x14, 40, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v8_v9 = PseudoTH_VLSEG2E_V_E32_M1 undef $v8_v9, killed $x16, $noreg, 5 /* e32 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v10 = PseudoTH_VMV_V_V_M1 undef $v10, $v8, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v11 = PseudoTH_VMV_V_V_M1 undef $v11, $v9, $noreg, 5 /* e32 */, 0 /* tu, mu */, implicit $vl, implicit $vtype
    $x15 = PseudoTH_VSETVLI $x14, 40, implicit-def $vl, implicit-def $vtype
    $v8_v9 = PseudoTH_VLSEG2E_V_E32_M1 undef $v8_v9, killed $x16, $noreg, 5, implicit $vl, implicit $vtype
    $v10_v11 = COPY $v8_v9
...
---
name: copy_narrow_copies_in_between
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $x10, $x11, $v8, $v9
    ; CHECK-LABEL: name: copy_narrow_copies_in_between
    ; CHECK: liveins: $x10, $x11, $v8, $v9
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: $x0 = PseudoTH_VSETVLI $x10, 37, implicit-def $vl, implicit-def $vtype
    ; CHECK-NEXT: $v10m2 = PseudoTH_VLH_V_E16_M2 undef $v10m2, killed $x11, $noreg, 4 /* e16 */, implicit $vl, implicit $vtype
    ; CHECK-NEXT: $v10 = TH_VMV_V_V $v8, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v11 = TH_VMV_V_V $v9, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v12 = TH_VMV_V_V $v10, implicit $vtype, implicit $vl
    ; CHECK-NEXT: $v13 = TH_VMV_V_V $v11, implicit $vtype, implicit $vl
    $x0 = PseudoTH_VSETVLI $x10, 37, implicit-def $vl, implicit-def $vtype
    $v10m2 = PseudoTH_VLH_V_E16_M2 undef $v10m2, killed $x11, $noreg, 4, implicit $vl, implicit $vtype
    $v10 = COPY $v8
    $v11 = COPY $v9
    $v12m2 = COPY $v10m2
...
